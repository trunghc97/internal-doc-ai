version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend-java
    networks:
      - docai-network

  backend-java:
    build:
      context: ./backend-java
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/docai
      - SPRING_DATASOURCE_USERNAME=docai_user
      - SPRING_DATASOURCE_PASSWORD=docai_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - JWT_SECRET=c9c1b2f3e4a5d6b7c8a9e0f1d2c3b4a5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1
      - BLOCKCHAIN_API_URL=http://localhost:8081
    depends_on:
      - postgres
    networks:
      - docai-network

  backend-python:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=docai
      - POSTGRES_USER=docai_user
      - POSTGRES_PASSWORD=docai_password
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - docai-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=docai
      - POSTGRES_USER=docai_user
      - POSTGRES_PASSWORD=docai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - docai-network

networks:
  docai-network:
    driver: bridge

volumes:
  postgres_data:
  ollama_data:
  llm_cache:
