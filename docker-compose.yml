version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend-java
    networks:
      - docai-network

  backend-java:
    build:
      context: ./backend-java
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/docai_db
      - SPRING_DATASOURCE_USERNAME=docai_user
      - SPRING_DATASOURCE_PASSWORD=docai_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION=true
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - JWT_SECRET=c9c1b2f3e4a5d6b7c8a9e0f1d2c3b4a5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docai-network

  backend-python:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_POSTGRES_HOST=postgres
      - DB_POSTGRES_PORT=5432
      - DB_POSTGRES_USER=docai_user
      - DB_POSTGRES_PASSWORD=docai_password
      - DB_POSTGRES_DB=docai_db
      - DB_ENVIRONMENT=production
      - DB_POOL_SIZE=5
      - DB_MAX_OVERFLOW=10
      - DB_POOL_TIMEOUT=30
      - DB_POOL_RECYCLE=3600
    volumes:
      - ./backend-python/files:/app/files
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docai-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=docai_db
      - POSTGRES_USER=docai_user
      - POSTGRES_PASSWORD=docai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docai_user -d docai_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docai-network

networks:
  docai-network:
    driver: bridge

volumes:
  postgres_data:
