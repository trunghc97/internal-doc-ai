{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let InputComponent = /*#__PURE__*/(() => {\n  var _InputComponent;\n  class InputComponent {\n    constructor() {\n      this.type = 'text';\n      this.placeholder = '';\n      this.disabled = false;\n      this.required = false;\n      this.error = false;\n      this.className = '';\n      this.value = '';\n      this.onChange = () => {};\n      this.onTouched = () => {};\n    }\n    get inputClasses() {\n      const baseClasses = 'flex h-9 w-full rounded-md border border-gray-300 bg-transparent px-3 py-1 text-sm shadow-sm transition-colors placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-500 disabled:cursor-not-allowed disabled:opacity-50';\n      return this.error ? `${baseClasses} border-red-500 focus-visible:ring-red-500` : baseClasses;\n    }\n    writeValue(value) {\n      this.value = value || '';\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    onInput(event) {\n      const target = event.target;\n      this.value = target.value;\n      this.onChange(this.value);\n    }\n  }\n  _InputComponent = InputComponent;\n  _InputComponent.ɵfac = function InputComponent_Factory(t) {\n    return new (t || _InputComponent)();\n  };\n  _InputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _InputComponent,\n    selectors: [[\"app-input\"]],\n    inputs: {\n      type: \"type\",\n      placeholder: \"placeholder\",\n      disabled: \"disabled\",\n      required: \"required\",\n      error: \"error\",\n      className: \"className\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => _InputComponent),\n      multi: true\n    }]), i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"input\", \"blur\", \"type\", \"placeholder\", \"disabled\", \"required\", \"value\", \"ngClass\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"input\", function InputComponent_Template_input_input_0_listener($event) {\n          return ctx.onInput($event);\n        })(\"blur\", function InputComponent_Template_input_blur_0_listener() {\n          return ctx.onTouched();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵproperty(\"type\", ctx.type)(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled)(\"required\", ctx.required)(\"value\", ctx.value)(\"ngClass\", ctx.inputClasses);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass],\n    encapsulation: 2\n  });\n  return InputComponent;\n})();","map":{"version":3,"names":["CommonModule","forwardRef","NG_VALUE_ACCESSOR","InputComponent","_InputComponent","constructor","type","placeholder","disabled","required","error","className","value","onChange","onTouched","inputClasses","baseClasses","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","onInput","event","target","selectors","inputs","standalone","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵStandaloneFeature","decls","vars","consts","template","InputComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","InputComponent_Template_input_input_0_listener","$event","InputComponent_Template_input_blur_0_listener","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","i1","NgClass","encapsulation"],"sources":["/Users/huy/Documents/internal-doc-ai/frontend/src/app/components/atoms/input.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  template: `\n    <input\n      [type]=\"type\"\n      [placeholder]=\"placeholder\"\n      [disabled]=\"disabled\"\n      [required]=\"required\"\n      [value]=\"value\"\n      (input)=\"onInput($event)\"\n      (blur)=\"onTouched()\"\n      [ngClass]=\"inputClasses\"\n      [class]=\"className\"\n    />\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ],\n  standalone: true,\n  imports: [\n        CommonModule\n        \n      ],\n})\nexport class InputComponent implements ControlValueAccessor {\n  @Input() type: string = 'text';\n  @Input() placeholder: string = '';\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() error: boolean = false;\n  @Input() className: string = '';\n\n  value: string = '';\n\n  private onChange: (value: string) => void = () => {};\n  onTouched: () => void = () => {};\n\n  get inputClasses(): string {\n    const baseClasses = 'flex h-9 w-full rounded-md border border-gray-300 bg-transparent px-3 py-1 text-sm shadow-sm transition-colors placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-500 disabled:cursor-not-allowed disabled:opacity-50';\n\n    return this.error\n      ? `${baseClasses} border-red-500 focus-visible:ring-red-500`\n      : baseClasses;\n  }\n\n  writeValue(value: string): void {\n    this.value = value || '';\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.value = target.value;\n    this.onChange(this.value);\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAA2BC,UAAU,QAAQ,eAAe;AAC5D,SAA+BC,iBAAiB,QAAQ,gBAAgB;;;AA8BxE,WAAaC,cAAc;EAAA,IAAAC,eAAA;EAArB,MAAOD,cAAc;IA5B3BE,YAAA;MA6BW,KAAAC,IAAI,GAAW,MAAM;MACrB,KAAAC,WAAW,GAAW,EAAE;MACxB,KAAAC,QAAQ,GAAY,KAAK;MACzB,KAAAC,QAAQ,GAAY,KAAK;MACzB,KAAAC,KAAK,GAAY,KAAK;MACtB,KAAAC,SAAS,GAAW,EAAE;MAE/B,KAAAC,KAAK,GAAW,EAAE;MAEV,KAAAC,QAAQ,GAA4B,MAAK,CAAE,CAAC;MACpD,KAAAC,SAAS,GAAe,MAAK,CAAE,CAAC;;IAEhC,IAAIC,YAAYA,CAAA;MACd,MAAMC,WAAW,GAAG,sQAAsQ;MAE1R,OAAO,IAAI,CAACN,KAAK,GACb,GAAGM,WAAW,4CAA4C,GAC1DA,WAAW;IACjB;IAEAC,UAAUA,CAACL,KAAa;MACtB,IAAI,CAACA,KAAK,GAAGA,KAAK,IAAI,EAAE;IAC1B;IAEAM,gBAAgBA,CAACC,EAA2B;MAC1C,IAAI,CAACN,QAAQ,GAAGM,EAAE;IACpB;IAEAC,iBAAiBA,CAACD,EAAc;MAC9B,IAAI,CAACL,SAAS,GAAGK,EAAE;IACrB;IAEAE,gBAAgBA,CAACC,UAAmB;MAClC,IAAI,CAACd,QAAQ,GAAGc,UAAU;IAC5B;IAEAC,OAAOA,CAACC,KAAY;MAClB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA0B;MAC/C,IAAI,CAACb,KAAK,GAAGa,MAAM,CAACb,KAAK;MACzB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACD,KAAK,CAAC;IAC3B;;oBAzCWT,cAAc;;qBAAdA,eAAc;EAAA;;UAAdA,eAAc;IAAAuB,SAAA;IAAAC,MAAA;MAAArB,IAAA;MAAAC,WAAA;MAAAC,QAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,SAAA;IAAA;IAAAiB,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CAbd,CACT;MACEC,OAAO,EAAE9B,iBAAiB;MAC1B+B,WAAW,EAAEhC,UAAU,CAAC,MAAME,eAAc,CAAC;MAC7C+B,KAAK,EAAE;KACR,CACF,GAAAJ,EAAA,CAAAK,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAlBCX,EAAA,CAAAa,cAAA,eAUE;QAHAb,EADA,CAAAc,UAAA,mBAAAC,+CAAAC,MAAA;UAAA,OAASJ,GAAA,CAAAnB,OAAA,CAAAuB,MAAA,CAAe;QAAA,EAAC,kBAAAC,8CAAA;UAAA,OACjBL,GAAA,CAAA5B,SAAA,EAAW;QAAA,EAAC;QAPtBgB,EAAA,CAAAkB,YAAA,EAUE;;;QADAlB,EAAA,CAAAmB,UAAA,CAAAP,GAAA,CAAA/B,SAAA,CAAmB;QADnBmB,EAPA,CAAAoB,UAAA,SAAAR,GAAA,CAAApC,IAAA,CAAa,gBAAAoC,GAAA,CAAAnC,WAAA,CACc,aAAAmC,GAAA,CAAAlC,QAAA,CACN,aAAAkC,GAAA,CAAAjC,QAAA,CACA,UAAAiC,GAAA,CAAA9B,KAAA,CACN,YAAA8B,GAAA,CAAA3B,YAAA,CAGS;;;mBAatBf,YAAY,EAAAmD,EAAA,CAAAC,OAAA;IAAAC,aAAA;EAAA;EAAA,OAIPlD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}